{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PHT\\\\OneDrive\\\\laptrinhungdungnangcao\\\\gk\\\\frontend_shop-web-master\\\\frontend_shop-web-master\\\\src\\\\contexts\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport function useCart() {\n  _s();\n  return useContext(CartContext);\n}\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cartItems, setCartItems] = useState([]);\n  const [notification, setNotification] = useState({\n    isVisible: false,\n    type: 'success',\n    message: ''\n  });\n\n  // Tải dữ liệu giỏ hàng từ localStorage khi component mount\n  useEffect(() => {\n    const storedCart = localStorage.getItem('cart');\n    if (storedCart) {\n      try {\n        setCartItems(JSON.parse(storedCart));\n      } catch (error) {\n        console.error('Error parsing cart from localStorage', error);\n      }\n    }\n  }, []);\n\n  // Lưu giỏ hàng vào localStorage khi thay đổi\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  // Thêm sản phẩm vào giỏ hàng\n  const addToCart = (product, quantity = 1, size, color) => {\n    setCartItems(prevItems => {\n      // Kiểm tra xem sản phẩm đã có trong giỏ hàng chưa (cùng size và màu)\n      const existingItemIndex = prevItems.findIndex(item => item.id === product.id && item.size === size && item.color === color);\n      let updatedItems;\n      if (existingItemIndex >= 0) {\n        // Nếu sản phẩm đã tồn tại, cập nhật số lượng\n        updatedItems = [...prevItems];\n        updatedItems[existingItemIndex].quantity += quantity;\n      } else {\n        // Nếu sản phẩm chưa tồn tại, thêm mới vào giỏ hàng\n        updatedItems = [...prevItems, {\n          ...product,\n          quantity,\n          size,\n          color\n        }];\n      }\n      return updatedItems;\n    });\n\n    // Hiển thị thông báo\n    showNotification('success', 'Đã thêm sản phẩm vào giỏ hàng!');\n  };\n\n  // Cập nhật số lượng sản phẩm trong giỏ hàng\n  const updateQuantity = (id, size, color, newQuantity) => {\n    if (newQuantity < 1) return;\n    setCartItems(prevItems => prevItems.map(item => item.id === id && item.size === size && item.color === color ? {\n      ...item,\n      quantity: newQuantity\n    } : item));\n  };\n\n  // Xóa sản phẩm khỏi giỏ hàng\n  const removeFromCart = (id, size, color) => {\n    setCartItems(prevItems => prevItems.filter(item => !(item.id === id && item.size === size && item.color === color)));\n    showNotification('info', 'Đã xóa sản phẩm khỏi giỏ hàng');\n  };\n\n  // Xóa toàn bộ giỏ hàng\n  const clearCart = () => {\n    setCartItems([]);\n    showNotification('info', 'Giỏ hàng đã được làm trống');\n  };\n\n  // Hàm hiển thị thông báo\n  const showNotification = (type, message) => {\n    setNotification({\n      isVisible: true,\n      type,\n      message\n    });\n\n    // Tự động ẩn thông báo sau 3 giây\n    setTimeout(() => {\n      setNotification(prev => ({\n        ...prev,\n        isVisible: false\n      }));\n    }, 3000);\n  };\n\n  // Đóng thông báo\n  const closeNotification = () => {\n    setNotification(prev => ({\n      ...prev,\n      isVisible: false\n    }));\n  };\n\n  // Tính tổng số lượng sản phẩm trong giỏ hàng\n  const cartCount = cartItems.reduce((sum, item) => sum + item.quantity, 0);\n\n  // Tính tổng tiền giỏ hàng\n  const cartTotal = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n  const value = {\n    cartItems,\n    cartCount,\n    cartTotal,\n    addToCart,\n    updateQuantity,\n    removeFromCart,\n    clearCart,\n    notification,\n    closeNotification\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 10\n  }, this);\n};\n_s2(CartProvider, \"oZZO4wCF1zY2aIUzIvQqiMDi1dc=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cartItems","setCartItems","notification","setNotification","isVisible","type","message","storedCart","localStorage","getItem","JSON","parse","error","console","setItem","stringify","addToCart","product","quantity","size","color","prevItems","existingItemIndex","findIndex","item","id","updatedItems","showNotification","updateQuantity","newQuantity","map","removeFromCart","filter","clearCart","setTimeout","prev","closeNotification","cartCount","reduce","sum","cartTotal","price","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PHT/OneDrive/laptrinhungdungnangcao/gk/frontend_shop-web-master/frontend_shop-web-master/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst CartContext = createContext();\n\nexport function useCart() {\n  return useContext(CartContext);\n}\n\nexport const CartProvider = ({ children }) => {\n  const [cartItems, setCartItems] = useState([]);\n  const [notification, setNotification] = useState({\n    isVisible: false,\n    type: 'success',\n    message: ''\n  });\n\n  // Tải dữ liệu giỏ hàng từ localStorage khi component mount\n  useEffect(() => {\n    const storedCart = localStorage.getItem('cart');\n    if (storedCart) {\n      try {\n        setCartItems(JSON.parse(storedCart));\n      } catch (error) {\n        console.error('Error parsing cart from localStorage', error);\n      }\n    }\n  }, []);\n\n  // Lưu giỏ hàng vào localStorage khi thay đổi\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  // Thêm sản phẩm vào giỏ hàng\n  const addToCart = (product, quantity = 1, size, color) => {\n    setCartItems(prevItems => {\n      // Kiểm tra xem sản phẩm đã có trong giỏ hàng chưa (cùng size và màu)\n      const existingItemIndex = prevItems.findIndex(\n        item => item.id === product.id && item.size === size && item.color === color\n      );\n\n      let updatedItems;\n\n      if (existingItemIndex >= 0) {\n        // Nếu sản phẩm đã tồn tại, cập nhật số lượng\n        updatedItems = [...prevItems];\n        updatedItems[existingItemIndex].quantity += quantity;\n      } else {\n        // Nếu sản phẩm chưa tồn tại, thêm mới vào giỏ hàng\n        updatedItems = [\n          ...prevItems,\n          {\n            ...product,\n            quantity,\n            size,\n            color\n          }\n        ];\n      }\n\n      return updatedItems;\n    });\n\n    // Hiển thị thông báo\n    showNotification('success', 'Đã thêm sản phẩm vào giỏ hàng!');\n  };\n\n  // Cập nhật số lượng sản phẩm trong giỏ hàng\n  const updateQuantity = (id, size, color, newQuantity) => {\n    if (newQuantity < 1) return;\n\n    setCartItems(prevItems =>\n      prevItems.map(item =>\n        item.id === id && item.size === size && item.color === color\n          ? { ...item, quantity: newQuantity }\n          : item\n      )\n    );\n  };\n\n  // Xóa sản phẩm khỏi giỏ hàng\n  const removeFromCart = (id, size, color) => {\n    setCartItems(prevItems =>\n      prevItems.filter(item => \n        !(item.id === id && item.size === size && item.color === color)\n      )\n    );\n    showNotification('info', 'Đã xóa sản phẩm khỏi giỏ hàng');\n  };\n\n  // Xóa toàn bộ giỏ hàng\n  const clearCart = () => {\n    setCartItems([]);\n    showNotification('info', 'Giỏ hàng đã được làm trống');\n  };\n\n  // Hàm hiển thị thông báo\n  const showNotification = (type, message) => {\n    setNotification({\n      isVisible: true,\n      type,\n      message\n    });\n\n    // Tự động ẩn thông báo sau 3 giây\n    setTimeout(() => {\n      setNotification(prev => ({\n        ...prev,\n        isVisible: false\n      }));\n    }, 3000);\n  };\n\n  // Đóng thông báo\n  const closeNotification = () => {\n    setNotification(prev => ({\n      ...prev,\n      isVisible: false\n    }));\n  };\n\n  // Tính tổng số lượng sản phẩm trong giỏ hàng\n  const cartCount = cartItems.reduce((sum, item) => sum + item.quantity, 0);\n\n  // Tính tổng tiền giỏ hàng\n  const cartTotal = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n\n  const value = {\n    cartItems,\n    cartCount,\n    cartTotal,\n    addToCart,\n    updateQuantity,\n    removeFromCart,\n    clearCart,\n    notification,\n    closeNotification\n  };\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}